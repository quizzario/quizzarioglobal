{"version":3,"file":"component---src-pages-careers-tsx-dd8418c0fb7b59044bcb.js","mappings":"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","sources":["webpack://quizzario/./src/components/BottomBanner.tsx","webpack://quizzario/./src/components/HoverCard.tsx","webpack://quizzario/./src/components/OutlineLink.tsx","webpack://quizzario/./src/components/PageIntro.tsx","webpack://quizzario/./src/components/SectionDescription.tsx","webpack://quizzario/./src/components/CareerModal.tsx","webpack://quizzario/./src/pages/careers.tsx"],"sourcesContent":["import { GatsbyImage, StaticImage, getImage } from \"gatsby-plugin-image\";\nimport React from \"react\";\nimport { OutlineLink } from \"./OutlineLink\";\nimport { SectionDescription } from \"./SectionDescription\";\nimport { LayoutContainer } from \"./LayoutContainer\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\nexport const BottomBanner = () => {\n  const rawData = useStaticQuery(graphql`\n    query {\n      sanityFooterBannerSettings {\n        title\n        secondaryImage {\n          asset {\n            gatsbyImageData(fit: FILL, placeholder: NONE)\n          }\n        }\n        ctaButton {\n          label\n          url\n        }\n        description\n        prefix\n        mascotImage {\n          asset {\n            gatsbyImageData(fit: FILL, placeholder: NONE)\n          }\n        }\n      }\n    }\n  `);\n\n  const data = rawData.sanityFooterBannerSettings\n\n  return (\n    <LayoutContainer parentClassName=\"relative overflow-hidden\">\n      <span className=\"bg-gradient-to-r from-brand-eight to-brand-seven absolute inset-0 opacity-20 -z-10\" />\n      <div className=\"relative py-16 sm:py-24 px-10 sm:px-0\">\n        <div className=\"sm:grid grid-cols-8\">\n          <span className=\"col-span-2\" />\n          <div className=\"col-span-4\">\n            <SectionDescription\n              smallTitle={data.prefix}\n              bigTitle={data.title}\n              description={data.description}\n            />\n            <div className=\"-mt-5\">\n              <OutlineLink\n                label={data.ctaButton.label}\n                to={data.ctaButton.url}\n              />\n            </div>\n          </div>\n        </div>\n        <GatsbyImage\n          alt=\"\"\n          image={getImage(data.mascotImage.asset)!}\n          className=\"bottom-0 -z-10 right-0 blur-3xl sm:blur-none opacity-30 sm:opacity-100 sm:left-0 absolute w-72\"\n        />\n        <GatsbyImage\n          alt=\"\"\n          imgStyle={{ transition: 'none' }}\n          image={getImage(data.secondaryImage.asset)!}\n          className=\"bottom-0 -z-10 -mb-10 right-0 absolute w-96 hidden sm:block\"\n        />\n      </div>\n    </LayoutContainer>\n  );\n};\n","import React from \"react\";\nimport { PropsWithChildren } from \"react\";\nimport { cl } from \"../helpers/general\";\n\ninterface Props extends PropsWithChildren {\n  stayHighlighted?: boolean;\n  colors?: string[];\n  className?: string;\n}\n\nexport const HoverCard = (props: Props) => {\n  const colors = props.colors || [\"from-brand-seven\", \"to-brand-eight\"];\n\n  return (\n    <div\n      className={cl(\n        \"relative rounded-2xl overflow-hidden group p-6 bg-brand-four z-20 text-center sm:text-left flex-shrink-0 w-full sm:w-auto\",\n        props.className\n      )}\n    >\n      <div\n        className={cl(\n          \"bg-gradient-to-br absolute inset-0 transition-opacity group-hover:opacity-100 -z-10 rounded-2xl\",\n          ...colors,\n          props.stayHighlighted ? \"\" : \"sm:opacity-0\"\n        )}\n      >\n        <div className=\"bg-black absolute inset-[1px] rounded-2xl\"></div>\n      </div>\n      <span\n        className={cl(\n          \"bg-gradient-to-br absolute inset-[1px] opacity-30  transition-opacity group-hover:opacity-30 -z-10 rounded-2xl\",\n          ...colors,\n          props.stayHighlighted ? \"\" : \"sm:opacity-0\"\n        )}\n      />\n      {props.children}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { cl } from \"../helpers/general\";\nimport { GRADIENT_1 } from \"../styles\";\nimport { GatsbyLinkProps, Link } from \"gatsby\";\n\ninterface Props extends GatsbyLinkProps<any> {\n  label: string;\n  bgColor?: string;\n}\n\nexport const OutlineLink = (props: Props) => {\n  return (\n    <Link\n      to={props.to}\n      className={cl(\n        \"rounded-full overflow-hidden p-[1px] inline-block\",\n        GRADIENT_1\n      )}\n    >\n      <div className={cl(\"rounded-full\", props.bgColor || \"bg-brand-six\")}>\n        <div\n          className={cl(\n            \"text-transparent font-bold bg-clip-text px-10 py-4\",\n            GRADIENT_1\n          )}\n        >\n          {props.label}\n        </div>\n      </div>\n    </Link>\n  );\n};\n","import React from \"react\";\n\nimport { LayoutContainer } from \"./LayoutContainer\";\nimport { StaticImage } from \"gatsby-plugin-image\";\n\ninterface Props {\n  title: string;\n  subTitle: string;\n}\n\nexport const PageIntro = (props: Props) => {\n  return (\n    <div className=\"relative overflow-hidden bg-black pt-16\">\n      <StaticImage alt=\"\" src=\"../images/page-intro.png\" className=\"blur-3xl scale-125 absolute inset-0\" />\n      <LayoutContainer className=\"md:py-28 py-12 text-center md:text-left relative z-10\">\n        <div className=\"text-4xl md:text-6xl\">{props.title}</div>\n        {props.subTitle && (\n          <div className=\"opacity-80 mt-3\">{props.subTitle}</div>\n        )}\n      </LayoutContainer>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { cl } from \"../helpers/general\";\nimport { GRADIENT_1 } from \"../styles\";\n\ntype Props = {\n  smallTitle: string;\n  bigTitle: string;\n  description?: string;\n  className?: string;\n}\n\nexport const SectionDescription = (props: Props) => {\n  return (\n    <div className={cl(\"flex flex-col mb-12\", props.className)}>\n      <div\n        className={cl(\n          \"text-transparent bg-clip-text mb-2\",\n          GRADIENT_1\n        )}\n      >\n        {props.smallTitle}\n      </div>\n      <div className=\"text-white text-3xl sm:text-5xl\">{props.bigTitle}</div>\n      {props.description && <p className=\"mt-8 opacity-80 leading-7\">{props.description}</p>}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { OutlineLink } from \"./OutlineLink\";\n\ninterface Props {\n  onClose: () => {};\n  data: any;\n}\n\nexport const CareerModal = (props: Props) => {\n  return (\n    <div\n      onClick={() => props.onClose()}\n      className=\"fixed inset-0 z-20 flex items-center justify-center\"\n    >\n      <div className=\"fixed inset-0 -z-10 opacity-50 bg-black\" />\n      <div className=\"px-8 py-6 sm:px-10 sm:py-12 min-w-fit transition-transform border border-transparent bg-brand-four rounded-lg shadow-xl\">\n        <div className=\"text-3xl mb-2\">{props.data.title}</div>\n        <div className=\"flex mb-4\">\n          {props.data.highlight && (\n            <div className=\"mr-3 rounded-md px-2 py-1 text-xs bg-brand-nine text-brand-four font-bold\">\n              {props.data.highlight.toUpperCase()}\n            </div>\n          )}\n          <div className=\"opacity-50\">{props.data.subtitle}</div>\n        </div>\n        <div className=\"space-y-6\">\n          <p className=\"max-w-md opacity-75 mt-8\">{props.data.description}</p>\n\n          {props.data.requirements.length > 0 && (\n            <div>\n              <div className=\"text-xl mb-2\">Requirements</div>\n              <ul className=\"list-disc opacity-75 ml-5\">\n                {props.data.requirements.map((item: string, index: number) => {\n                  return (\n                    <li key={index} className=\"list-item\">\n                      {item}\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          )}\n\n          {props.data.benefits.length > 0 && (\n            <div>\n              <div className=\"text-xl mb-2\">Benefits</div>\n              <ul className=\"list-disc opacity-75 ml-5\">\n                {props.data.benefits.map((item: string, index: number) => {\n                  return (\n                    <li key={index} className=\"list-item\">\n                      {item}\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          )}\n\n          <OutlineLink\n            label=\"Apply Now\"\n            to=\"/enquiry\"\n            state={{ origin: \"careers\", post: \"Test\" }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport Helmet from \"react-helmet\";\n//\nimport { Footer } from \"../components/Footer\";\nimport { Header } from \"../components/Header\";\nimport { PageIntro } from \"../components/PageIntro\";\nimport { BottomBanner } from \"../components/BottomBanner\";\nimport { useStaticQuery, graphql } from \"gatsby\";\nimport { LayoutContainer } from \"../components/LayoutContainer\";\nimport { HoverCard } from \"../components/HoverCard\";\nimport { GRADIENT_1 } from \"../styles\";\nimport { cl } from \"../helpers/general\";\nimport { CareerModal } from \"../components/CareerModal\";\n//\n\nconst Careers = () => {\n  const rawData = useStaticQuery(graphql`\n    query {\n      allSanityCareers {\n        nodes {\n          title\n          subtitle\n          highlight\n          description\n          isOpen\n          requirements\n          benefits\n        }\n      }\n    }\n  `);\n\n  const [selectedJob, setSelectedJob] = React.useState<any>();\n\n  const data: any[] = rawData.allSanityCareers.nodes;\n\n  return (\n    <>\n      <Header hasPageIntro={true} />\n      <PageIntro\n        title=\"Careers\"\n        subTitle=\"Looking for an opportunity to work with Quizzario? Apply now.\"\n      />\n      <LayoutContainer className=\"sm:py-24\">\n        <div className=\"sm:grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8 flex flex-col\">\n          {data.sort((a, b) => b.isOpen - a.isOpen).map((item, index) => {\n            return (\n              <HoverCard\n                key={index}\n                className={cl(!item.isOpen && \"opacity-50 pointer-events-none\")}\n              >\n                {item.highlight && (\n                  <div className=\"absolute right-0 bottom-0 m-5 rounded-md px-2 py-1 text-xs bg-brand-nine text-brand-four font-bold\">\n                    {item.highlight.toUpperCase()}\n                  </div>\n                )}\n                <div className=\"text-xl mb-1\">{item.title}</div>\n                <div className=\"opacity-50 mb-4\">{item.subtitle}</div>\n                <span\n                  onClick={() => setSelectedJob(item)!}\n                  className={cl(\n                    \"text-transparent bg-clip-text cursor-pointer\",\n                    GRADIENT_1\n                  )}\n                >\n                  {item.isOpen ? \"See Details\" : \"Closed\"}\n                </span>\n              </HoverCard>\n            );\n          })}\n        </div>\n      </LayoutContainer>\n      {selectedJob && (\n        <CareerModal onClose={() => setSelectedJob(null)!} data={selectedJob} />\n      )}\n      <BottomBanner />\n      <Footer />\n    </>\n  );\n};\n\nexport default Careers;\n"],"names":["BottomBanner","data","useStaticQuery","sanityFooterBannerSettings","React","LayoutContainer","parentClassName","className","SectionDescription","smallTitle","prefix","bigTitle","title","description","OutlineLink","label","ctaButton","to","url","GatsbyImage","alt","image","getImage","mascotImage","asset","imgStyle","transition","secondaryImage","HoverCard","props","colors","cl","stayHighlighted","children","Link","GRADIENT_1","bgColor","PageIntro","StaticImage","src","subTitle","CareerModal","onClick","onClose","highlight","toUpperCase","subtitle","requirements","length","map","item","index","key","benefits","state","origin","post","rawData","selectedJob","setSelectedJob","allSanityCareers","nodes","Header","hasPageIntro","sort","a","b","isOpen","Footer"],"sourceRoot":""}